C51 COMPILER V9.01   MAIN                                                                  08/19/2017 14:21:51 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>    //包含头文件，一般情况不需要改动，头文件包含特殊功能寄存器的定义
   2          #include<intrins.h>
   3          #include <stc89x52.h>
*** WARNING C318 IN LINE 3 OF main.c: can't open file 'stc89x52.h'
   4          #define uint unsigned int
   5          #define uchar unsigned char
   6          sbit RS = P1^0;   //定义端口
   7          sbit RW = P1^1;
   8          sbit EN = P2^5;
   9          sbit DU = P2^6;
  10          sbit WE = P2^7;
  11          sbit FM = P2^3;
  12          sbit IR=P3^2;  //红外接口标志
  13          #define DataPort P0 //定义数据端口 程序中遇到DataPort 则用P0 替换
  14          /*------------------------------------------------
  15                          全局变量声明
  16          ------------------------------------------------*/
  17          unsigned char  irtime;//红外用全局变量
  18          
  19          bit irpro_ok,irok;
  20          unsigned char IRcord[4];
  21          unsigned char irdata[33];
  22          
  23          /*------------------------------------------------
  24                            函数声明
  25          ------------------------------------------------*/
  26          
  27          void Ir_work(void);
  28          void Ircordpro(void);
  29          void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data) ;
  30          
  31          /*------------------------------------------------
  32                            定时器0中断处理
  33          ------------------------------------------------*/
  34          
  35          void tim0_isr (void) interrupt 1 using 1
  36          {
  37   1        irtime++;  //用于计数2个下降沿之间的时间
  38   1      }
  39          
  40          /*------------------------------------------------
  41                            外部中断0中断处理
  42          ------------------------------------------------*/
  43          void EX0_ISR (void) interrupt 0 //外部中断0服务函数
  44          {
  45   1        static unsigned char  i;             //接收红外信号处理
  46   1        static bit startflag;                //是否开始处理标志位
  47   1      
  48   1      if(startflag)                         
  49   1         {
  50   2          if(irtime<63&&irtime>=33)//引导码 TC9012的头码，9ms+4.5ms
  51   2                              i=0;
  52   2                      irdata[i]=irtime;//存储每个电平的持续时间，用于以后判断是0还是1
  53   2                      irtime=0;
  54   2                      i++;
C51 COMPILER V9.01   MAIN                                                                  08/19/2017 14:21:51 PAGE 2   

  55   2                               if(i==33)
  56   2                      {
  57   3                                        irok=1;   //做好了准备
  58   3                                          i=0;
  59   3                                      }
  60   2                }
  61   1               else
  62   1                      {
  63   2                      irtime=0;
  64   2                      startflag=1;
  65   2                      }
  66   1      
  67   1      }
  68          
  69          /*------------------------------------------------
  70                          定时器0初始化
  71          ------------------------------------------------*/
  72          void TIM0init(void)//定时器0初始化
  73          {
  74   1      
  75   1        TMOD=0x02;//定时器0工作方式2，TH0是重装值，TL0是初值
  76   1        TH0=0x00; //重载值
  77   1        TL0=0x00; //初始化值
  78   1        ET0=1;    //开中断
  79   1        TR0=1;    
  80   1      }
  81          /*------------------------------------------------
  82                            外部中断0初始化
  83          ------------------------------------------------*/
  84          void EX0init(void)
  85          {
  86   1       IT0 = 1;   //指定外部中断0下降沿触发，INT0 (P3.2)
  87   1       EX0 = 1;   //使能外部中断
  88   1       EA = 1;    //开总中断
  89   1      }
  90          /*------------------------------------------------
  91                            键值处理
  92          ------------------------------------------------*/
  93          
  94          void Ir_work(void)//红外键值散转程序
  95          {
  96   1             switch(IRcord[2])//判断第三个数码值
  97   1                       {
  98   2                               case 0x0c:LCD_Write_Char(14,0,'1');break;//1 显示相应的按键值
  99   2                               case 0x18:LCD_Write_Char(14,0,'2');break;//2
 100   2                               case 0x5e:LCD_Write_Char(14,0,'3');break;//3
 101   2                               case 0x08:LCD_Write_Char(14,0,'4');break;//4
 102   2                               case 0x1c:LCD_Write_Char(14,0,'5');break;//5
 103   2                               case 0x5a:LCD_Write_Char(14,0,'6');break;//6
 104   2                               case 0x42:LCD_Write_Char(14,0,'7');break;//7
 105   2                               case 0x52:LCD_Write_Char(14,0,'8');break;//8
 106   2                               case 0x4a:LCD_Write_Char(14,0,'9');break;//9
 107   2                   default:break;
 108   2                               }
 109   1      
 110   1                        irpro_ok=0;//处理完成标志
 111   1      
 112   1        }
 113          /*------------------------------------------------
 114                          红外码值处理
 115          ------------------------------------------------*/
 116          void Ircordpro(void)//红外码值处理函数
C51 COMPILER V9.01   MAIN                                                                  08/19/2017 14:21:51 PAGE 3   

 117          { 
 118   1        unsigned char i, j, k;
 119   1        unsigned char cord,value;
 120   1      
 121   1        k=1;
 122   1        for(i=0;i<4;i++)      //处理4个字节
 123   1           {
 124   2            for(j=1;j<=8;j++) //处理1个字节8位
 125   2               {
 126   3                cord=irdata[k];
 127   3                if(cord>7)//大于某值为1，这个和晶振有绝对关系，这里使用12M计算，此值可以有一定误差
 128   3                   value|=0x80;
 129   3                if(j<8)
 130   3                          {
 131   4                               value>>=1;
 132   4                              }
 133   3                 k++;
 134   3               }
 135   2           IRcord[i]=value;
 136   2           value=0;     
 137   2           } 
 138   1               irpro_ok=1;//处理完毕标志位置1
 139   1      }
 140          
 141          void cmg88()//关数码管
 142          {
 143   1                      DU = 1;
 144   1                      P0 = 0X00;
 145   1                      DU = 0;
 146   1                      WE = 0;
 147   1      }
 148          
 149          void DelayUs2x(unsigned char t)
 150          {
 151   1              while(--t);
 152   1      }
 153          
 154          void DelayMs(unsigned char t)
 155          {
 156   1      
 157   1       while(t--)
 158   1       {
 159   2           //大致延时1mS
 160   2           DelayUs2x(245);
 161   2               DelayUs2x(245);
 162   2       }
 163   1      }
 164          
 165           bit LCD_Check_Busy(void)
 166           {
 167   1               P0 = 0xff;
 168   1               RS = 0;
 169   1               RW = 1;
 170   1               EN = 0;
 171   1               _nop_();
 172   1               EN = 1;
 173   1               return (bit)(P0 & 0x80);         //强制取最高位
 174   1       }
 175          
 176           void LCD_Write_Com(unsigned char com)
 177           {
 178   1               while(LCD_Check_Busy()); //忙则等待
C51 COMPILER V9.01   MAIN                                                                  08/19/2017 14:21:51 PAGE 4   

 179   1               RS=0;
 180   1               RW=0;
 181   1               EN=1;
 182   1               P0 = com;
 183   1               _nop_();
 184   1               EN=0;
 185   1       }
 186          
 187           void LCD_Write_Data(unsigned char Data)
 188           {
 189   1               while(LCD_Check_Busy()); //忙则等待
 190   1               RS=1;
 191   1               RW=0;
 192   1               EN=1;
 193   1               P0 = Data;
 194   1               _nop_();
 195   1               EN=0;
 196   1       }
 197          
 198           void LCD_Clear(void)
 199           {
 200   1               LCD_Write_Com(0x01);
 201   1               DelayMs(5);
 202   1       }
 203          
 204           void LCD_Write_String(unsigned char x,unsigned char y,unsigned char *s)
 205           {
 206   1               if (y == 0)
 207   1               {
 208   2                              LCD_Write_Com(0x80 + x);     //表示第一行
 209   2               }
 210   1               else
 211   1               {
 212   2                              LCD_Write_Com(0xC0 + x);      //表示第二行
 213   2               }
 214   1               while (*s)
 215   1               {
 216   2                              LCD_Write_Data( *s);
 217   2                              s ++;
 218   2               }
 219   1       }
 220          
 221           void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data)
 222           {
 223   1               if (y == 0)
 224   1               {
 225   2                      LCD_Write_Com(0x80 + x);
 226   2               }
 227   1               else
 228   1               {
 229   2                      LCD_Write_Com(0xC0 + x);
 230   2               }
 231   1               LCD_Write_Data( Data);
 232   1       }
 233          
 234           void LCD_Init(void)            //静态初始化
 235           {
 236   1         LCD_Write_Com(0x38);    /*显示模式设置*/
 237   1         DelayMs(5);
 238   1         LCD_Write_Com(0x38);
 239   1         DelayMs(5);
 240   1         LCD_Write_Com(0x38);
C51 COMPILER V9.01   MAIN                                                                  08/19/2017 14:21:51 PAGE 5   

 241   1         DelayMs(5);
 242   1         LCD_Write_Com(0x38);
 243   1         LCD_Write_Com(0x08);    /*显示关闭*/
 244   1         LCD_Write_Com(0x01);    /*显示清屏*/
 245   1         LCD_Write_Com(0x06);    /*显示光标移动设置*/
 246   1         DelayMs(5);
 247   1         LCD_Write_Com(0x0C);    /*显示开及光标设置*/
 248   1         //LCD_Write_Com(0x0f);
 249   1       }
 250          
 251          /*------------------------------------------------
 252                              主函数
 253          ------------------------------------------------*/
 254          void main(void)
 255          {
 256   1       EX0init(); //初始化外部中断
 257   1       TIM0init();//初始化定时器
 258   1              FM = 1;
 259   1              cmg88();//关数码管，点阵函数
 260   1              LCD_Init();   //静态初始化
 261   1              LCD_Clear();//清屏
 262   1      
 263   1          LCD_Write_String(0,0," value of RC:");
 264   1       while(1)//主循环
 265   1         {
 266   2          if(irok)                        //如果接收好了进行红外处理
 267   2                {   
 268   3                 Ircordpro();
 269   3                 irok=0;
 270   3                }
 271   2      
 272   2          if(irpro_ok)                   //如果处理好后进行工作处理，如按对应的按键后显示对应的数字等
 273   2                {
 274   3                 Ir_work();
 275   3                 FM = 0;
 276   3                 DelayMs(100);
 277   3                 FM = 1;
 278   3      
 279   3                }
 280   2         }
 281   1      }
 282            
 283            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    472    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
