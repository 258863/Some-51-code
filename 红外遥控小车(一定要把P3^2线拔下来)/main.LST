C51 COMPILER V8.06   MAIN                                                                  08/16/2017 00:10:16 PAGE 1   


C51 COMPILER V8.06, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE main.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg52.h>   
   2          #include<intrins.h>
   3          #define uint unsigned int
   4          #define uchar unsigned char
   5          sbit RS = P1^0;   //定义端口
   6          sbit RW = P1^1;
   7          sbit EN = P2^5;
   8          sbit DU = P2^6;
   9          sbit WE = P2^7;
  10          sbit FM = P2^3;
  11          sbit IR=P3^2;  //红外接口标志
  12          sbit IN1=P1^2; // 高电平1 后退（反转）
  13          sbit IN2=P1^3; // 高电平1 前进（正转）
  14          sbit IN3=P1^6; // 高电平1 前进（正转）  
  15          sbit IN4=P1^7; // 高电平1 后退（反转）
  16          sbit EN1=P1^4; // 高电平使能 
  17          sbit EN2=P1^5; // 高电平使能 
  18          #define DataPort P0 //定义数据端口 程序中遇到DataPort 则用P0 替换
  19          /*------------------------------------------------
  20                          全局变量声明
  21          ------------------------------------------------*/
  22          unsigned char  irtime;//红外用全局变量
  23          
  24          bit irpro_ok,irok;
  25          unsigned char IRcord[4];
  26          unsigned char irdata[33];
  27          
  28          /*------------------------------------------------
  29                            函数声明
  30          ------------------------------------------------*/
  31          
  32          void Ir_work(void);
  33          void Ircordpro(void);
  34          void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data) ;
  35          void run();
  36          void back();
  37          void right();
  38          void left();
  39          void stop();
  40          
  41          /*------------------------------------------------
  42                            定时器0中断处理
  43          ------------------------------------------------*/
  44          
  45          void tim0_isr (void) interrupt 1 using 1
  46          {
  47   1        irtime++;  //用于计数2个下降沿之间的时间
  48   1      }
  49          
  50          /*------------------------------------------------
  51                            外部中断0中断处理
  52          ------------------------------------------------*/
  53          void EX0_ISR (void) interrupt 0 //外部中断0服务函数
  54          {
  55   1        static unsigned char  i;             //接收红外信号处理
C51 COMPILER V8.06   MAIN                                                                  08/16/2017 00:10:16 PAGE 2   

  56   1        static bit startflag;                //是否开始处理标志位
  57   1      
  58   1      if(startflag)                         
  59   1         {
  60   2          if(irtime<63&&irtime>=33)//引导码 TC9012的头码，9ms+4.5ms
  61   2                              i=0;
  62   2                      irdata[i]=irtime;//存储每个电平的持续时间，用于以后判断是0还是1
  63   2                      irtime=0;
  64   2                      i++;
  65   2                               if(i==33)
  66   2                      {
  67   3                                        irok=1;   //做好了准备
  68   3                                          i=0;
  69   3                                      }
  70   2                }
  71   1               else
  72   1                      {
  73   2                      irtime=0;
  74   2                      startflag=1;
  75   2                      }
  76   1      
  77   1      }
  78          
  79          /*------------------------------------------------
  80                          定时器0初始化
  81          ------------------------------------------------*/
  82          void TIM0init(void)//定时器0初始化
  83          {
  84   1      
  85   1        TMOD=0x02;//定时器0工作方式2，TH0是重装值，TL0是初值
  86   1        TH0=0x00; //重载值
  87   1        TL0=0x00; //初始化值
  88   1        ET0=1;    //开中断
  89   1        TR0=1;    
  90   1      }
  91          /*------------------------------------------------
  92                            外部中断0初始化
  93          ------------------------------------------------*/
  94          void EX0init(void)
  95          {
  96   1       IT0 = 1;   //指定外部中断0下降沿触发，INT0 (P3.2)
  97   1       EX0 = 1;   //使能外部中断
  98   1       EA = 1;    //开总中断
  99   1      }
 100          /*------------------------------------------------
 101                            键值处理
 102          ------------------------------------------------*/
 103          
 104          void Ir_work(void)//红外键值散转程序
 105          {
 106   1             switch(IRcord[2])//判断第三个数码值
 107   1                       {
 108   2                               case 0x18:run();break;//前
 109   2                               case 0x52:back();break;//后
 110   2                               case 0x08:left();;break;//左
 111   2                               case 0x5a:right();break;//右
 112   2                               case 0x1c:stop();break;//停
 113   2      
 114   2                   default:break;
 115   2                               }
 116   1      
 117   1                        irpro_ok=0;//处理完成标志
C51 COMPILER V8.06   MAIN                                                                  08/16/2017 00:10:16 PAGE 3   

 118   1      
 119   1        }
 120          /*------------------------------------------------
 121                          红外码值处理
 122          ------------------------------------------------*/
 123          void Ircordpro(void)//红外码值处理函数
 124          { 
 125   1        unsigned char i, j, k;
 126   1        unsigned char cord,value;
 127   1      
 128   1        k=1;
 129   1        for(i=0;i<4;i++)      //处理4个字节
 130   1           {
 131   2            for(j=1;j<=8;j++) //处理1个字节8位
 132   2               {
 133   3                cord=irdata[k];
 134   3                if(cord>7)//大于某值为1，这个和晶振有绝对关系，这里使用12M计算，此值可以有一定误差
 135   3                   value|=0x80;
 136   3                if(j<8)
 137   3                          {
 138   4                               value>>=1;
 139   4                              }
 140   3                 k++;
 141   3               }
 142   2           IRcord[i]=value;
 143   2           value=0;     
 144   2           } 
 145   1               irpro_ok=1;//处理完毕标志位置1
 146   1      }
 147          
 148          void cmg88()//关数码管
 149          {
 150   1                      DU = 1;
 151   1                      P0 = 0X00;
 152   1                      DU = 0;
 153   1                      WE = 0;
 154   1      }
 155          
 156          void DelayUs2x(unsigned char t)
 157          {
 158   1              while(--t);
 159   1      }
 160          
 161          void DelayMs(unsigned char t)
 162          {
 163   1      
 164   1       while(t--)
 165   1       {
 166   2           //大致延时1mS
 167   2           DelayUs2x(245);
 168   2               DelayUs2x(245);
 169   2       }
 170   1      }
 171          
 172           bit LCD_Check_Busy(void)
 173           {
 174   1               P0 = 0xff;
 175   1               RS = 0;
 176   1               RW = 1;
 177   1               EN = 0;
 178   1               _nop_();
 179   1               EN = 1;
C51 COMPILER V8.06   MAIN                                                                  08/16/2017 00:10:16 PAGE 4   

 180   1               return (bit)(P0 & 0x80);         //强制取最高位
 181   1       }
 182          
 183           void LCD_Write_Com(unsigned char com)
 184           {
 185   1               while(LCD_Check_Busy()); //忙则等待
 186   1               RS=0;
 187   1               RW=0;
 188   1               EN=1;
 189   1               P0 = com;
 190   1               _nop_();
 191   1               EN=0;
 192   1       }
 193          
 194           void LCD_Write_Data(unsigned char Data)
 195           {
 196   1               while(LCD_Check_Busy()); //忙则等待
 197   1               RS=1;
 198   1               RW=0;
 199   1               EN=1;
 200   1               P0 = Data;
 201   1               _nop_();
 202   1               EN=0;
 203   1       }
 204          
 205           void LCD_Clear(void)
 206           {
 207   1               LCD_Write_Com(0x01);
 208   1               DelayMs(5);
 209   1       }
 210          
 211           void LCD_Write_String(unsigned char x,unsigned char y,unsigned char *s)
 212           {
 213   1               if (y == 0)
 214   1               {
 215   2                              LCD_Write_Com(0x80 + x);     //表示第一行
 216   2               }
 217   1               else
 218   1               {
 219   2                              LCD_Write_Com(0xC0 + x);      //表示第二行
 220   2               }
 221   1               while (*s)
 222   1               {
 223   2                              LCD_Write_Data( *s);
 224   2                              s ++;
 225   2               }
 226   1       }
 227          
 228           void LCD_Write_Char(unsigned char x,unsigned char y,unsigned char Data)
 229           {
 230   1               if (y == 0)
 231   1               {
 232   2                      LCD_Write_Com(0x80 + x);
 233   2               }
 234   1               else
 235   1               {
 236   2                      LCD_Write_Com(0xC0 + x);
 237   2               }
 238   1               LCD_Write_Data( Data);
 239   1       }
 240          
 241           void LCD_Init(void)            //静态初始化
C51 COMPILER V8.06   MAIN                                                                  08/16/2017 00:10:16 PAGE 5   

 242           {
 243   1         LCD_Write_Com(0x38);    /*显示模式设置*/
 244   1         DelayMs(5);
 245   1         LCD_Write_Com(0x38);
 246   1         DelayMs(5);
 247   1         LCD_Write_Com(0x38);
 248   1         DelayMs(5);
 249   1         LCD_Write_Com(0x38);
 250   1         LCD_Write_Com(0x08);    /*显示关闭*/
 251   1         LCD_Write_Com(0x01);    /*显示清屏*/
 252   1         LCD_Write_Com(0x06);    /*显示光标移动设置*/
 253   1         DelayMs(5);
 254   1         LCD_Write_Com(0x0C);    /*显示开及光标设置*/
 255   1         //LCD_Write_Com(0x0f);
 256   1       }
 257          
 258           void run(void)                   //前进函数
 259          {
 260   1              EN1=1;
 261   1              EN2=1;//电机使能
 262   1          IN1=0;
 263   1              IN2=1; //左电机的正转
 264   1              IN3=1;
 265   1              IN4=0;//右电机的正转
 266   1      }
 267          
 268          void back(void)                   //后退函数
 269          {
 270   1              EN1=1;
 271   1              EN2=1;//电机使能
 272   1          IN1=1;
 273   1              IN2=0; //左电机的反转
 274   1              IN3=0;
 275   1              IN4=1;//右电机的反转
 276   1      }
 277          
 278          void right(void)                 //右转函数
 279          {
 280   1              EN1=1;
 281   1              EN2=1;//电机使能
 282   1          IN1=0;
 283   1              IN2=1; //左电机的正转
 284   1              IN3=0;
 285   1              IN4=0;//右电机不动
 286   1      }
 287          
 288          void left(void)                   //左转函数
 289          {
 290   1              EN1=1;
 291   1              EN2=1;//电机使能
 292   1          IN1=0;
 293   1              IN2=0; //左电机不动
 294   1              IN3=1;
 295   1              IN4=0;//右电机正转
 296   1      }
 297          
 298          void stop(void)                   //停止函数
 299          {
 300   1              EN1=1;
 301   1              EN2=1;//电机使能
 302   1          IN1=0;
 303   1              IN2=0; //左电机不动
C51 COMPILER V8.06   MAIN                                                                  08/16/2017 00:10:16 PAGE 6   

 304   1              IN3=0;
 305   1              IN4=0;//右电机正转
 306   1      }
 307          
 308          /*------------------------------------------------
 309                              主函数
 310          ------------------------------------------------*/
 311          void main(void)
 312          {
 313   1          EX0init(); //初始化外部中断
 314   1          TIM0init();//初始化定时器
 315   1              FM = 1;
 316   1              cmg88();//关数码管，点阵函数
 317   1              LCD_Init();   //静态初始化
 318   1              LCD_Clear();//清屏
 319   1      
 320   1          //LCD_Write_String(0,0," value of RC:");
 321   1       while(1)//主循环
 322   1         {
 323   2          if(irok)                        //如果接收好了进行红外处理
 324   2                {   
 325   3                 Ircordpro();
 326   3                 irok=0;
 327   3                }
 328   2      
 329   2          if(irpro_ok)                   //如果处理好后进行工作处理，如按对应的按键后显示对应的数字等
 330   2                {
 331   3                 Ir_work();
 332   3                 FM = 0;
 333   3                 DelayMs(100);
 334   3                 FM = 1;
 335   3      
 336   3                }
 337   2         }
 338   1      }
 339            
 340            


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    493    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     39    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      3    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
